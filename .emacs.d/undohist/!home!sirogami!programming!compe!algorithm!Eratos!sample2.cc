
((digest . "7646f58474a7462bd848c5b3f3ddd8c3") (undo-list (1003 . 1004) nil (1002 . 1003) nil (996 . 997) nil (986 . 996) nil (983 . 986) nil (978 . 979) nil (972 . 976) nil (971 . 972) nil (966 . 971) nil (965 . 967) ("(" . -965) (965 . 966) nil ("<" . -965) 966 nil ("pri" . -966) 969 nil (966 . 969) nil (965 . 966) nil (956 . 965) nil (955 . 957) ("(" . -955) (955 . 956) nil (942 . 955) nil (938 . 942) nil (932 . 933) nil (925 . 932) nil (924 . 925) nil (922 . 924) nil (917 . 922) nil (916 . 917) nil (911 . 916) nil (907 . 911) (906 . 911) nil (902 . 905) ("				" . 902) (906 . 908) ("{" . -906) (906 . 907) nil (901 . 906) nil (891 . 900) nil (889 . 890) (888 . 890) ("[" . -888) (878 . 889) nil (877 . 879) ("(" . -877) (877 . 878) nil (876 . 877) (" x" . -876) (876 . 878) ("while" . 876) (871 . 876) 876 nil (871 . 876) nil (867 . 871) nil (866 . 867) nil (856 . 866) nil (852 . 856) nil (851 . 852) nil (849 . 850) (848 . 850) ("[" . -848) (848 . 849) nil (827 . 848) nil (824 . 827) (823 . 827) nil (820 . 822) ("			" . 820) (823 . 825) ("{" . -823) (823 . 824) nil (819 . 823) nil (812 . 818) nil (811 . 813) ("(" . -811) (811 . 812) nil (810 . 811) (" x" . -810) (810 . 812) ("while" . 810) (805 . 810) 810 nil (805 . 810) nil (802 . 805) nil (801 . 802) nil (797 . 801) nil (795 . 797) nil (792 . 795) nil (791 . 792) nil (789 . 791) nil (788 . 789) nil (784 . 788) nil (783 . 784) nil (777 . 783) nil (775 . 777) (774 . 777) nil (772 . 773) ("		" . 772) (774 . 776) ("{" . -774) (774 . 775) nil (771 . 774) nil (766 . 770) nil (765 . 767) ("(" . -765) (765 . 766) nil (749 . 765) nil (747 . 749) nil (744 . 747) nil (743 . 744) nil (741 . 743) nil (740 . 741) nil (736 . 740) nil (735 . 736) nil (729 . 735) nil (727 . 729) ("	" . 727) 728 nil (726 . 728) nil (713 . 714) nil (709 . 713) nil (707 . 708) (706 . 708) ("[" . -706) (695 . 707) nil (688 . 694) nil (686 . 687) (685 . 687) ("[" . -685) (675 . 686) nil (674 . 676) ("(" . -674) (674 . 675) nil (671 . 674) nil (666 . 671) nil (665 . 666) nil (657 . 665) nil (655 . 656) (654 . 656) ("[" . -654) (647 . 655) nil (643 . 647) (642 . 647) nil (638 . 641) ("				" . 638) (642 . 644) ("{" . -642) (642 . 643) nil (637 . 642) nil (629 . 636) nil (628 . 629) nil (623 . 624) nil ("+" . -623) 624 nil (623 . 624) nil (624 . 627) ("max" . 624) nil (623 . 627) nil (622 . 623) nil (619 . 622) nil (618 . 619) nil (617 . 618) nil (616 . 617) nil (608 . 616) nil (607 . 609) ("(" . -607) (607 . 608) nil (603 . 607) nil (599 . 603) nil (598 . 599) nil (594 . 598) nil (592 . 593) (591 . 593) ("[" . -591) (581 . 592) nil (577 . 581) nil (576 . 577) nil (574 . 575) nil (573 . 575) ("(" . -573) (573 . 574) nil (557 . 573) nil (553 . 557) nil (552 . 553) nil (543 . 552) nil (540 . 541) (539 . 541) ("[" . -539) (531 . 540) nil (530 . 532) ("(" . -530) (530 . 531) nil (528 . 530) nil (525 . 528) (524 . 528) nil (521 . 523) ("			" . 521) (524 . 526) ("{" . -524) (524 . 525) nil (520 . 524) nil (515 . 519) nil (514 . 515) nil (511 . 514) ("max" . 511) nil (509 . 514) nil (508 . 509) nil (505 . 508) nil ("i" . -505) (" " . -506) 507 nil (505 . 507) nil (504 . 505) nil (496 . 504) nil (495 . 497) ("(" . -495) (495 . 496) nil (491 . 495) nil (488 . 491) ("		" . 488) 490 nil (487 . 490) nil (486 . 487) nil (482 . 486) nil (480 . 481) (479 . 481) ("[" . -479) (469 . 480) nil (466 . 469) nil (465 . 466) nil (461 . 465) nil (459 . 460) (458 . 460) ("[" . -458) (448 . 459) nil (445 . 448) nil (444 . 445) nil (439 . 444) nil ("t" . -439) 440 nil (436 . 440) nil (434 . 435) (433 . 435) ("[" . -433) (423 . 434) nil (421 . 422) (420 . 422) ("[" . -420) (413 . 421) nil (411 . 413) (410 . 413) nil (408 . 409) ("					 " . 408) (414 . 416) ("{" . -414) (414 . 415) nil (407 . 414) nil (403 . 406) nil (402 . 403) nil (400 . 402) nil (397 . 400) ("max" . 397) nil (397 . 400) nil (396 . 398) ("(" . -396) (396 . 397) nil (386 . 396) nil (379 . 386) nil (378 . 379) nil (372 . 377) nil (371 . 372) nil (369 . 371) nil (366 . 369) ("max" . 366) nil (366 . 369) nil (365 . 367) ("(" . -365) (365 . 366) nil ("s" . -365) 366 nil (358 . 366) nil (351 . 358) nil (350 . 351) nil (348 . 350) ("(" . -348) (348 . 349) nil (341 . 348) nil (340 . 341) nil (339 . 340) nil (335 . 338) ("max" . 335) nil (332 . 338) nil (331 . 333) ("(" . -331) (331 . 332) nil (325 . 331) nil (323 . 325) ("	" . 323) 324 nil (322 . 324) nil (321 . 322) nil (310 . 321) nil (309 . 310) nil (307 . 309) nil (306 . 307) nil (300 . 306) nil (298 . 300) nil (297 . 298) nil (290 . 297) nil ("p" . -290) ("s" . -291) 292 nil (289 . 292) nil (288 . 289) nil (284 . 288) nil (283 . 284) nil (277 . 283) nil (275 . 277) nil (274 . 275) nil (267 . 274) nil (266 . 267) nil (264 . 266) nil (263 . 264) nil (257 . 263) nil (256 . 257) (255 . 257) nil (254 . 256) ("{" . -254) (254 . 255) nil (253 . 254) nil (240 . 253) (t 24271 5446 539984 713000) nil ("struct Eratos
" . 240) ((marker . 240) . -14) ((marker . 240) . -13) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 1003) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker . 240) . -14) ((marker) . -14) nil ("{
	vector<ll> primes;
	vector<bool> isprime;
	vector<ll> min_factor;

	Eratos(ll MAX) : primes(),
					 isprime(MAX+1, true),
					 min_factor(MAX+1, -1)
	{
		isprime[0] = isprime[1] = false;
		min_factor[0] = 0;
		min_factor[1] = 1;

		for (ll i = 2; i <= MAX; ++i)
		{
			if(!isprime[i]) continue;
			primes.push_back(i);
			min_factor[i] = i;
			for (ll j = i*2; j <= MAX; j += i)
			{
				isprime[j] = false;
				if (min_factor[j] == -1) min_factor[j] = i;
			}
		}
	}

	vector<pair<ll, ll>> prime_factorize(ll n)
	{
		vector<pair<ll, ll>> res;
		while (n != 1)
		{
			ll prime = min_factor[n];
			ll exp = 0;
			while (min_factor[n] == prime)
			{
				++exp;
				n /= prime;
			}
			res.push_back(make_pair(prime, exp));
		}
		return res;
	}
};" . 254) ((marker . 240) . -749) ((marker) . -2) ((marker) . -2) ((marker) . -22) ((marker) . -22) ((marker) . -45) ((marker) . -45) ((marker . 240) . -43) ((marker . 240) . -43) ((marker . 240) . -43) ((marker . 240) . -43) ((marker . 240) . -43) ((marker) . -69) ((marker) . -69) ((marker) . -70) ((marker) . -70) ((marker) . -98) ((marker) . -98) ((marker) . -126) ((marker) . -126) ((marker) . -154) ((marker) . -154) ((marker) . -157) ((marker) . -157) ((marker) . -466) ((marker) . -466) ((marker) . -192) ((marker) . -192) ((marker . 240) . -174) ((marker . 240) . -174) ((marker . 240) . -174) ((marker . 240) . -174) ((marker . 240) . -174) ((marker) . -213) ((marker) . -213) ((marker) . -234) ((marker) . -234) ((marker) . -235) ((marker) . -235) ((marker) . -267) ((marker) . -267) ((marker) . -271) ((marker) . -271) ((marker) . -470) ((marker) . -470) ((marker) . -300) ((marker) . -300) ((marker . 240) . -293) ((marker . 240) . -293) ((marker . 240) . -293) ((marker . 240) . -293) ((marker . 240) . -293) ((marker) . -324) ((marker) . -324) ((marker) . -346) ((marker) . -346) ((marker) . -384) ((marker) . -384) ((marker . 240) . -376) ((marker . 240) . -376) ((marker . 240) . -376) ((marker . 240) . -376) ((marker . 240) . -376) ((marker) . -389) ((marker) . -389) ((marker) . -461) ((marker) . -461) ((marker) . -413) ((marker) . -413) ((marker) . -473) ((marker) . -473) ((marker) . -474) ((marker) . -474) ((marker) . -518) ((marker) . -518) ((marker) . -521) ((marker) . -521) ((marker) . -566) ((marker) . -566) ((marker) . -549) ((marker) . -549) ((marker) . -570) ((marker) . -570) ((marker) . -599) ((marker) . -599) ((marker) . -614) ((marker) . -614) ((marker) . -648) ((marker) . -648) ((marker . 240) . -623) ((marker . 240) . -623) ((marker . 240) . -623) ((marker . 240) . -623) ((marker . 240) . -623) ((marker) . -653) ((marker) . -653) ((marker) . -685) ((marker) . -685) ((marker) . -726) ((marker) . -726) ((marker) . -744) ((marker) . -744) ((marker) . -680) ((marker) . -680) ((marker) . -664) ((marker) . -664) ((marker) . -730) ((marker) . -730) ((marker) . -747) ((marker) . -747) ((marker . 240) . -749) ((marker . 240) . -749) ((marker . 240) . -749) ((marker . 240) . -749) ((marker . 240) . -749) ((marker . 240) . -749) ((marker . 240) . -749) ((marker . 240) . -749) ((marker . 240) . -749) ((marker . 240) . -749) ((marker . 240) . -749) ((marker . 240) . -749) ((marker . 240) . -749) ((marker . 240) . -749) ((marker . 1003) . -749) ((marker . 240) . -749) ((marker . 240) . -749) ((marker . 240) . -749) ((marker . 240) . -749) ((marker . 240) . -749) ((marker . 240) . -749) ((marker . 240) . -749) ((marker . 240) . -749) ((marker . 240) . -749) ((marker) . -749) ((marker*) . 749) ((marker) . -1) ((marker*) . 2) ((marker) . -748) nil (1002 . 1003) nil (996 . 997) nil (987 . 996) nil (986 . 987) nil (983 . 986) nil (978 . 979) nil (972 . 976) nil (971 . 972) nil (966 . 971) nil (965 . 967) ("(" . -965) (965 . 966) nil ("<" . -965) ((marker . 1003) . -1) 966 nil ("pri" . -966) ((marker . 1003) . -3) 969 nil (966 . 969) nil (965 . 966) nil (956 . 965) nil (955 . 957) ("(" . -955) (955 . 956) nil (942 . 955) nil (938 . 942) nil (932 . 933) nil (925 . 932) nil (924 . 925) nil (922 . 924) nil (917 . 922) nil (916 . 917) nil (911 . 916) nil (907 . 911) (906 . 911) nil (902 . 905) ("				" . 902) (906 . 908) ("{" . -906) (906 . 907) nil (901 . 906) nil (891 . 900) nil (889 . 890) (888 . 890) ("[" . -888) (883 . 889) nil (878 . 883) nil (877 . 879) ("(" . -877) (877 . 878) nil (876 . 877) (" x" . -876) (876 . 878) ("while" . 876) ((marker . 1003) . -3) (871 . 876) 876 nil (871 . 876) nil (867 . 871) nil (866 . 867) nil (856 . 866) nil (852 . 856) nil (851 . 852) nil (849 . 850) (848 . 850) ("[" . -848) (848 . 849) nil (827 . 848) nil (824 . 827) (823 . 827) nil (820 . 822) ("			" . 820) (823 . 825) ("{" . -823) (823 . 824) nil (819 . 823) nil (812 . 818) nil (811 . 813) ("(" . -811) (811 . 812) nil (810 . 811) (" x" . -810) (810 . 812) ("while" . 810) ((marker . 1003) . -5) (805 . 810) 810 nil (805 . 810) nil (802 . 805) nil (801 . 802) nil (797 . 801) nil (796 . 797) nil (795 . 796) nil (792 . 795) nil (791 . 792) nil (789 . 791) nil (788 . 789) nil (784 . 788) nil (783 . 784) nil (777 . 783) nil (775 . 777) (774 . 777) nil (772 . 773) ("		" . 772) (774 . 776) ("{" . -774) (774 . 775) nil (771 . 774) nil (766 . 770) nil (765 . 767) ("(" . -765) (765 . 766) nil (750 . 765) nil (749 . 750) nil (747 . 749) nil (744 . 747) nil (743 . 744) nil (741 . 743) nil (740 . 741) nil (736 . 740) nil (735 . 736) nil (729 . 735) nil (727 . 729) ("	" . 727) ((marker . 1003) . -1) 728 nil (726 . 728) nil (713 . 714) nil (709 . 713) nil (707 . 708) (706 . 708) ("[" . -706) (698 . 707) nil (695 . 698) nil (688 . 694) nil (686 . 687) (685 . 687) ("[" . -685) (675 . 686) nil (674 . 676) ("(" . -674) (674 . 675) nil (671 . 674) nil (666 . 671) nil (665 . 666) nil (657 . 665) nil (655 . 656) (654 . 656) ("[" . -654) (648 . 655) nil (647 . 648) nil (643 . 647) (642 . 647) nil (638 . 641) ("				" . 638) (642 . 644) ("{" . -642) (642 . 643) nil (637 . 642) nil (629 . 636) nil (628 . 629) nil (623 . 624) nil ("+" . -623) ((marker . 1003) . -1) 624 nil (623 . 624) nil (624 . 627) ("max" . 624) nil (623 . 627) nil (622 . 623) nil (621 . 622) nil (619 . 621) nil (618 . 619) nil (617 . 618) nil (616 . 617) nil (608 . 616) nil (607 . 609) ("(" . -607) (607 . 608) nil (603 . 607) nil (599 . 603) nil (598 . 599) nil (594 . 598) nil (592 . 593) (591 . 593) ("[" . -591) (581 . 592) nil (577 . 581) nil (576 . 577) nil (574 . 575) nil (573 . 575) ("(" . -573) (573 . 574) nil (568 . 573) nil (557 . 568) nil (553 . 557) nil (552 . 553) nil (543 . 552) nil (540 . 541) (539 . 541) ("[" . -539) (531 . 540) nil (530 . 532) ("(" . -530) (530 . 531) nil (528 . 530) nil (525 . 528) (524 . 528) nil (521 . 523) ("			" . 521) (524 . 526) ("{" . -524) (524 . 525) nil (520 . 524) nil (517 . 519) nil (515 . 517) nil (514 . 515) nil (511 . 514) ("max" . 511) nil (509 . 514) nil (508 . 509) nil (505 . 508) nil ("i" . -505) ((marker . 1003) . -1) (" " . -506) ((marker . 1003) . -1) 507 nil (505 . 507) nil (504 . 505) nil (496 . 504) nil (495 . 497) ("(" . -495) (495 . 496) nil (491 . 495) nil (488 . 491) ("		" . 488) ((marker . 1003) . -2) 490 nil (487 . 490) nil (486 . 487) nil (482 . 486) nil (480 . 481) (479 . 481) ("[" . -479) (475 . 480) nil (469 . 475) nil (466 . 469) nil (465 . 466) nil (461 . 465) nil (459 . 460) (458 . 460) ("[" . -458) (448 . 459) nil (445 . 448) nil (444 . 445) nil (439 . 444) nil ("t" . -439) ((marker . 1003) . -1) 440 nil (436 . 440) nil (434 . 435) (433 . 435) ("[" . -433) (423 . 434) nil (421 . 422) (420 . 422) ("[" . -420) (413 . 421) nil (411 . 413) (410 . 413) nil (408 . 409) ("					 " . 408) (414 . 416) ("{" . -414) (414 . 415) nil (407 . 414) nil (403 . 406) nil (402 . 403) nil (400 . 402) nil (397 . 400) ("max" . 397) nil (397 . 400) nil (396 . 398) ("(" . -396) (396 . 397) nil (386 . 396) nil (379 . 386) nil (378 . 379) nil (372 . 377) nil (371 . 372) nil (369 . 371) nil (366 . 369) ("max" . 366) nil (366 . 369) nil (365 . 367) ("(" . -365) (365 . 366) nil ("s" . -365) ((marker . 1003) . -1) 366 nil (358 . 366) nil (351 . 358) nil (350 . 351) nil (348 . 350) ("(" . -348) (348 . 349) nil (341 . 348) nil (340 . 341) nil (339 . 340) nil (335 . 338) ("max" . 335) nil (332 . 338) nil (331 . 333) ("(" . -331) (331 . 332) nil (325 . 331) nil (323 . 325) ("	" . 323) ((marker . 1003) . -1) 324 nil (322 . 324) nil (321 . 322) nil (314 . 321) nil (310 . 314) nil (309 . 310) nil (307 . 309) nil (306 . 307) nil (300 . 306) nil (298 . 300) nil (297 . 298) nil (290 . 297) nil ("p" . -290) ((marker . 1003) . -1) ("s" . -291) ((marker . 1003) . -1) 292 nil (289 . 292) nil (288 . 289) nil (284 . 288) nil (283 . 284) nil (277 . 283) nil (275 . 277) nil (274 . 275) nil (267 . 274) nil (266 . 267) nil (264 . 266) nil (263 . 264) nil (257 . 263) nil (256 . 257) (255 . 257) nil (254 . 256) ("{" . -254) (254 . 255) nil (253 . 254) nil (240 . 253) nil (238 . 240) nil (236 . 238) ("(" . -236) ((marker . 238) . -1) (236 . 237) nil (232 . 236) nil (230 . 231) nil (229 . 231) ("(" . -229) ((marker . 238) . -1) (229 . 230) nil (228 . 229) nil (")" . -227) (227 . 228) (")" . -227) (227 . 228) (226 . 228) ("(" . -226) ((marker . 238) . -1) (226 . 227) nil (220 . 226) nil (218 . 219) nil (217 . 219) ("(" . -217) ((marker . 238) . -1) (217 . 218) nil (216 . 217) nil (214 . 215) nil (213 . 215) ("(" . -213) ((marker . 238) . -1) (213 . 214) nil (210 . 213) ("all" . 210) nil (203 . 213) nil (202 . 203) nil (201 . 202) nil (199 . 200) nil (198 . 199) nil (197 . 198) nil (196 . 197) nil (195 . 196) nil (194 . 196) ("(" . -194) ((marker . 238) . -1) (194 . 195) nil (191 . 194) ("for" . 191) nil (190 . 194) nil (188 . 189) nil (187 . 188) nil (186 . 187) nil (185 . 187) ("(" . -185) ((marker . 238) . -1) (185 . 186) nil (182 . 185) ("rep" . 182) nil (175 . 185) nil (174 . 175) nil (173 . 174) nil (169 . 172) nil (168 . 169) nil (166 . 167) nil (165 . 167) ("(" . -165) (165 . 166) (")" . -164) (164 . 165) (")" . -164) (164 . 165) nil (162 . 164) nil (161 . 163) ("(" . -161) (161 . 162) nil (160 . 161) nil (159 . 160) nil (158 . 159) nil (156 . 157) nil (155 . 157) ("(" . -155) (155 . 156) nil (150 . 155) nil (149 . 151) ("(" . -149) ((marker . 238) . -1) (149 . 150) nil (144 . 149) nil (142 . 143) nil (141 . 142) nil (140 . 141) nil (139 . 140) nil (138 . 139) nil (137 . 139) ("(" . -137) ((marker . 238) . -1) (137 . 138) nil (134 . 137) ("for" . 134) nil (127 . 137) nil (126 . 127) nil (124 . 126) nil (123 . 124) nil (121 . 123) nil (119 . 121) nil (113 . 119) nil (110 . 113) ("inf" . 110) nil (97 . 113) nil (96 . 97) nil (95 . 96) nil (87 . 95) nil (84 . 87) ("mod" . 84) nil (71 . 87) nil (69 . 71) nil (68 . 69) nil (48 . 68) nil (46 . 48) nil (45 . 46) nil (26 . 45) nil (25 . 26) nil (24 . 25) nil (16 . 24) nil (15 . 16) nil (11 . 15) nil (10 . 11) nil (2 . 10) nil (1 . 2) (t 24271 5218 552914 951000) nil ("#include <bits/stdc++.h>
using namespace std;

using ll = long long;

constexpr ll MOD = 1e9+7;
constexpr ll INF = 1ll<<60;

#define FOR(i,a,b) for (ll i=(a);i<(ll)(b);++i)
#define REP(i,n) FOR(i,0,n)
#define ALL(v) (v).begin(),(v).end()


struct Eratos
{
	vector<ll> primes;
	vector<bool> isprime;
	vector<ll> vector<ll> min_factor;

	Eratos(ll MAX) : primes(),
					 isprime(MAX+1, true),
					 min_factor(MAX+1, -1)
	{
		isprime[0] = isprime[1] = false;
		min_factor[0] = 0;
		min_factor[1] = 1;

		for (ll i = 2; i <= MAX; ++i)
		{
			if(!isprime[i]) continue;
			primes.push_back(i);
			min_factor[i] = i;
			for (ll j = i*2; j <= MAX; j += i)
			{
				isprime[j] = false;
				if (min_factor[j] == -1) min_factor[j] = i;
			}
		}
	}

	vector<pair<ll, ll>> prime_factorize(ll n)
	{
		vector<pair<ll, ll>> res;
		while (n != 1)
		{
			ll prime = min_factor[n];
			ll exp = 0;
			while (min_factor[n] == prime)
			{
				++exp;
				n /= prime;
			}
			res.push_back(make_pair(prime, exp));
		}
		return res;
	}
};


{
	vector<ll> primes;
	vector<bool> isprime;
	vector<ll> vector<ll> min_factor;

	Eratos(ll MAX) : primes(),
					 isprime(MAX+1, true),
					 min_factor(MAX+1, -1)
	{
		isprime[0] = isprime[1] = false;
		min_factor[0] = 0;
		min_factor[1] = 1;

		for (ll i = 2; i <= MAX; ++i)
		{
			if(!isprime[i]) continue;
			primes.push_back(i);
			min_factor[i] = i;
			for (ll j = i*2; j <= MAX; j += i)
			{
				isprime[j] = false;
				if (min_factor[j] == -1) min_factor[j] = i;
			}
		}
	}

	vector<pair<ll, ll>> prime_factorize(ll n)
	{
		vector<pair<ll, ll>> res;
		while (n != 1)
		{
			ll prime = min_factor[n];
			ll exp = 0;
			while (min_factor[n] == prime)
			{
				++exp;
				n /= prime;
			}
			res.push_back(make_pair(prime, exp));
		}
		return res;
	}
};
" . 1) ((marker . 202) . -201) ((marker . 238) . -237) ((marker . 1) . -239) ((marker . 1) . -239) ((marker . 1) . -239) ((marker . 1) . -239) ((marker . 1) . -239) ((marker . 1) . -239) ((marker . 1) . -239) ((marker . 1) . -239) ((marker . 1) . -239) ((marker . 1) . -239) ((marker . 1) . -239) ((marker . 1) . -239) ((marker . 1) . -239) ((marker . 1) . -239) ((marker . 1) . -239) ((marker . 1) . -239) ((marker . 1) . -239) ((marker . 1) . -239) ((marker . 1) . -239) ((marker . 1) . -239) ((marker . 1) . -239) ((marker . 1) . -239) ((marker . 1) . -239) ((marker . 1) . -239) ((marker . 1) . -240) ((marker . 240) . -394) ((marker . 1) . -240) ((marker . 1) . -239) ((marker . 1) . -240) ((marker . 1) . -240) ((marker . 1) . -240) ((marker . 1) . -240) ((marker . 1) . -240) ((marker . 1) . -366) ((marker . 1) . -240) ((marker . 1) . -394) ((marker . 1) . -1017) ((marker . 1) . -1126) ((marker . 1) . -1016) ((marker . 1) . -678) ((marker . 1003) . -1016) ((marker . 1003) . -1016) nil ("struct Eratos
" . 1018) (t 24271 5184 93055 554000) nil (1792 . 1793) 1089 nil (1088 . 1089) nil (1087 . 1088) nil (1085 . 1087) nil (1084 . 1085) nil (1078 . 1084) nil (1076 . 1077) nil (1075 . 1076) nil (";" . -1075) ("
" . -1076) 1077 nil (1780 . 1781) nil (1774 . 1775) nil (1764 . 1774) nil (1761 . 1764) nil (1756 . 1757) nil (1750 . 1754) nil (1749 . 1750) nil (1744 . 1749) nil (1743 . 1745) ("(" . -1743) (1743 . 1744) nil ("<" . -1743) 1744 nil (1743 . 1744) nil (1739 . 1743) nil ("pi" . -1739) 1741 nil (1734 . 1741) nil (1733 . 1735) ("(" . -1733) (1733 . 1734) nil (1720 . 1733) nil (1716 . 1720) nil (1710 . 1711) nil (1703 . 1710) nil (1702 . 1703) nil (1700 . 1702) nil (1695 . 1700) nil (1694 . 1695) nil (1689 . 1694) nil (1685 . 1689) (1684 . 1689) nil (1680 . 1683) ("				" . 1680) (1684 . 1686) ("{" . -1684) (1684 . 1685) nil (1679 . 1684) nil (1669 . 1678) nil (1667 . 1668) (1666 . 1668) ("[" . -1666) (1656 . 1667) nil (1655 . 1657) ("(" . -1655) (1655 . 1656) nil (1654 . 1655) (" x" . -1654) (1654 . 1656) ("while" . 1654) (1649 . 1654) 1654 nil (1649 . 1654) nil (1645 . 1649) nil (1644 . 1645) nil (1634 . 1644) nil (1630 . 1634) nil (1629 . 1630) nil (1627 . 1628) (1626 . 1628) ("[" . -1626) (1626 . 1627) nil (1605 . 1626) nil (1602 . 1605) (1601 . 1605) nil (1598 . 1600) ("			" . 1598) (1601 . 1603) ("{" . -1601) (1601 . 1602) nil (1597 . 1601) nil (1590 . 1596) nil (1589 . 1591) ("(" . -1589) (1589 . 1590) nil (1588 . 1589) (" x" . -1588) (1588 . 1590) ("while" . 1588) (1583 . 1588) 1588 nil (1583 . 1588) nil (1580 . 1583) nil (1579 . 1580) nil (1575 . 1579) nil (1573 . 1575) nil (1570 . 1573) nil (1569 . 1570) nil (1567 . 1569) nil (1566 . 1567) nil (1562 . 1566) nil (1561 . 1562) nil (1555 . 1561) nil (1553 . 1555) (1552 . 1555) nil (1550 . 1551) ("		" . 1550) (1552 . 1554) ("{" . -1552) (1552 . 1553) nil (1549 . 1552) nil (1544 . 1548) nil (1543 . 1545) ("(" . -1543) (1543 . 1544) nil (1527 . 1543) nil (1525 . 1527) nil (1522 . 1525) nil (1521 . 1522) nil (1519 . 1521) nil (1518 . 1519) nil (1514 . 1518) nil (1513 . 1514) nil (1507 . 1513) nil (1505 . 1507) ("	" . 1505) 1506 nil (1504 . 1506) nil (1491 . 1492) nil (1487 . 1491) nil (1485 . 1486) (1484 . 1486) ("[" . -1484) (1473 . 1485) nil (1466 . 1472) nil (1464 . 1465) (1463 . 1465) ("[" . -1463) (1453 . 1464) nil (1452 . 1454) ("(" . -1452) (1452 . 1453) nil (1449 . 1452) nil (1444 . 1449) nil (1443 . 1444) nil (1435 . 1443) nil (1433 . 1434) (1432 . 1434) ("[" . -1432) (1432 . 1433) nil ("s" . -1432) 1433 nil (1425 . 1433) nil (1421 . 1425) (1420 . 1425) nil (1416 . 1419) ("				" . 1416) (1420 . 1422) ("{" . -1420) (1420 . 1421) nil (1415 . 1420) nil (1407 . 1414) nil (1406 . 1407) nil (1403 . 1406) ("max" . 1403) nil (1401 . 1406) nil (1400 . 1401) nil (1397 . 1400) nil (1396 . 1397) nil (1395 . 1396) nil (1394 . 1395) nil (1386 . 1394) nil (1385 . 1387) ("(" . -1385) (1385 . 1386) nil (1381 . 1385) nil (1377 . 1381) nil (1376 . 1377) nil (1372 . 1376) nil (1370 . 1371) (1369 . 1371) ("[" . -1369) (1359 . 1370) nil (1355 . 1359) nil (1354 . 1355) nil (1352 . 1353) nil (1351 . 1353) ("(" . -1351) (1351 . 1352) nil (1335 . 1351) nil (1331 . 1335) nil (1330 . 1331) nil (1321 . 1330) nil (1318 . 1319) (1317 . 1319) ("[" . -1317) (1309 . 1318) nil (1308 . 1310) ("(" . -1308) (1308 . 1309) nil (1306 . 1308) nil (1303 . 1306) (1302 . 1306) nil (1299 . 1301) ("			" . 1299) (1302 . 1304) ("{" . -1302) (1302 . 1303) nil (1298 . 1302) nil (1293 . 1297) nil (1292 . 1293) nil (1289 . 1292) ("max" . 1289) nil (1287 . 1292) nil (1286 . 1287) nil (1283 . 1286) nil (1282 . 1283) nil (1274 . 1282) nil (1273 . 1275) ("(" . -1273) (1273 . 1274) nil (1269 . 1273) nil (1266 . 1269) ("		" . 1266) 1268 nil (1265 . 1268) nil (1264 . 1265) nil (1260 . 1264) nil (1258 . 1259) (1257 . 1259) ("[" . -1257) (1247 . 1258) nil (1244 . 1247) nil (1243 . 1244) nil (1239 . 1243) nil (1237 . 1238) (1236 . 1238) ("[" . -1236) (1226 . 1237) nil (1223 . 1226) nil (1222 . 1223) nil (1214 . 1222) nil (1212 . 1213) (1211 . 1213) ("[" . -1211) (1201 . 1212) nil (1199 . 1200) (1198 . 1200) ("[" . -1198) (1191 . 1199) nil (1189 . 1191) (1188 . 1191) nil (1186 . 1187) ("					 " . 1186) (1192 . 1194) ("{" . -1192) (1192 . 1193) nil (1185 . 1192) nil (1181 . 1184) nil (1180 . 1181) nil (1178 . 1180) nil (1175 . 1178) ("max" . 1175) nil (1175 . 1178) nil (1174 . 1176) ("(" . -1174) (1174 . 1175) nil (1164 . 1174) nil (1157 . 1164) nil (1156 . 1157) nil (1150 . 1155) nil (1149 . 1150) nil (1147 . 1149) nil (1144 . 1147) ("max" . 1144) nil (1144 . 1147) nil (1143 . 1145) ("(" . -1143) (1143 . 1144) nil (1136 . 1143) nil (1129 . 1136) (" " . 1129) 1130 nil (1129 . 1130) nil (1128 . 1129) nil (1126 . 1128) ("(" . -1126) (1126 . 1127) nil (1119 . 1126) nil (1118 . 1119) nil (1117 . 1118) nil (1113 . 1116) ("max" . 1113) nil (1110 . 1116) nil (1109 . 1111) ("(" . -1109) (1109 . 1110) nil (1103 . 1109) nil (1101 . 1103) ("	" . 1101) 1102 nil (1100 . 1102) nil (1099 . 1100) nil (1088 . 1099) nil (1087 . 1088) nil (1085 . 1087) nil (1084 . 1085) nil (1078 . 1084) nil (1076 . 1078) nil (1075 . 1076) nil (1070 . 1075) nil ("_" . -1070) 1071 nil (1067 . 1071) nil (1066 . 1067) nil (1062 . 1066) nil (1061 . 1062) nil (1055 . 1061) nil (1053 . 1055) nil (1052 . 1053) nil (1045 . 1052) nil (1044 . 1045) nil (1042 . 1044) nil (1041 . 1042) nil (1035 . 1041) nil (1034 . 1035) (1033 . 1035) nil (1032 . 1034) ("{" . -1032) (1032 . 1033) nil (1031 . 1032) nil (1025 . 1031) nil ("D" . -1025) 1026 nil (1018 . 1026) nil (1016 . 1018) (t 24271 5013 133753 103000) nil (1015 . 1016) 312 nil (311 . 312) nil (310 . 311) nil (308 . 310) nil (307 . 308) nil (301 . 307) nil (299 . 300) nil (298 . 299) nil (";" . -298) ("
" . -299) 300 nil (1003 . 1004) nil (997 . 998) nil (987 . 997) nil (984 . 987) nil (979 . 980) nil (973 . 977) nil (972 . 973) nil (967 . 972) nil (966 . 968) ("(" . -966) (966 . 967) nil ("<" . -966) 967 nil (966 . 967) nil (962 . 966) nil ("pi" . -962) 964 nil (957 . 964) nil (956 . 958) ("(" . -956) (956 . 957) nil (943 . 956) nil (939 . 943) nil (933 . 934) nil (926 . 933) nil (925 . 926) nil (923 . 925) nil (918 . 923) nil (917 . 918) nil (912 . 917) nil (908 . 912) (907 . 912) nil (903 . 906) ("				" . 903) (907 . 909) ("{" . -907) (907 . 908) nil (902 . 907) nil (892 . 901) nil (890 . 891) (889 . 891) ("[" . -889) (879 . 890) nil (878 . 880) ("(" . -878) (878 . 879) nil (877 . 878) (" x" . -877) (877 . 879) ("while" . 877) (872 . 877) 877 nil (872 . 877) nil (868 . 872) nil (867 . 868) nil (857 . 867) nil (853 . 857) nil (852 . 853) nil (850 . 851) (849 . 851) ("[" . -849) (849 . 850) nil (828 . 849) nil (825 . 828) (824 . 828) nil (821 . 823) ("			" . 821) (824 . 826) ("{" . -824) (824 . 825) nil (820 . 824) nil (813 . 819) nil (812 . 814) ("(" . -812) (812 . 813) nil (811 . 812) (" x" . -811) (811 . 813) ("while" . 811) (806 . 811) 811 nil (806 . 811) nil (803 . 806) nil (802 . 803) nil (798 . 802) nil (796 . 798) nil (793 . 796) nil (792 . 793) nil (790 . 792) nil (789 . 790) nil (785 . 789) nil (784 . 785) nil (778 . 784) nil (776 . 778) (775 . 778) nil (773 . 774) ("		" . 773) (775 . 777) ("{" . -775) (775 . 776) nil (772 . 775) nil (767 . 771) nil (766 . 768) ("(" . -766) (766 . 767) nil (750 . 766) nil (748 . 750) nil (745 . 748) nil (744 . 745) nil (742 . 744) nil (741 . 742) nil (737 . 741) nil (736 . 737) nil (730 . 736) nil (728 . 730) ("	" . 728) 729 nil (727 . 729) nil (714 . 715) nil (710 . 714) nil (708 . 709) (707 . 709) ("[" . -707) (696 . 708) nil (689 . 695) nil (687 . 688) (686 . 688) ("[" . -686) (676 . 687) nil (675 . 677) ("(" . -675) (675 . 676) nil (672 . 675) nil (667 . 672) nil (666 . 667) nil (658 . 666) nil (656 . 657) (655 . 657) ("[" . -655) (655 . 656) nil ("s" . -655) 656 nil (648 . 656) nil (644 . 648) (643 . 648) nil (639 . 642) ("				" . 639) (643 . 645) ("{" . -643) (643 . 644) nil (638 . 643) nil (630 . 637) nil (629 . 630) nil (626 . 629) ("max" . 626) nil (624 . 629) nil (623 . 624) nil (620 . 623) nil (619 . 620) nil (618 . 619) nil (617 . 618) nil (609 . 617) nil (608 . 610) ("(" . -608) (608 . 609) nil (604 . 608) nil (600 . 604) nil (599 . 600) nil (595 . 599) nil (593 . 594) (592 . 594) ("[" . -592) (582 . 593) nil (578 . 582) nil (577 . 578) nil (575 . 576) nil (574 . 576) ("(" . -574) (574 . 575) nil (558 . 574) nil (554 . 558) nil (553 . 554) nil (544 . 553) nil (541 . 542) (540 . 542) ("[" . -540) (532 . 541) nil (531 . 533) ("(" . -531) (531 . 532) nil (529 . 531) nil (526 . 529) (525 . 529) nil (522 . 524) ("			" . 522) (525 . 527) ("{" . -525) (525 . 526) nil (521 . 525) nil (516 . 520) nil (515 . 516) nil (512 . 515) ("max" . 512) nil (510 . 515) nil (509 . 510) nil (506 . 509) nil (505 . 506) nil (497 . 505) nil (496 . 498) ("(" . -496) (496 . 497) nil (492 . 496) nil (489 . 492) ("		" . 489) 491 nil (488 . 491) nil (487 . 488) nil (483 . 487) nil (481 . 482) (480 . 482) ("[" . -480) (470 . 481) nil (467 . 470) nil (466 . 467) nil (462 . 466) nil (460 . 461) (459 . 461) ("[" . -459) (449 . 460) nil (446 . 449) nil (445 . 446) nil (437 . 445) nil (435 . 436) (434 . 436) ("[" . -434) (424 . 435) nil (422 . 423) (421 . 423) ("[" . -421) (414 . 422) nil (412 . 414) (411 . 414) nil (409 . 410) ("					 " . 409) (415 . 417) ("{" . -415) (415 . 416) nil (408 . 415) nil (404 . 407) nil (403 . 404) nil (401 . 403) nil (398 . 401) ("max" . 398) nil (398 . 401) nil (397 . 399) ("(" . -397) (397 . 398) nil (387 . 397) nil (380 . 387) nil (379 . 380) nil (373 . 378) nil (372 . 373) nil (370 . 372) nil (367 . 370) ("max" . 367) nil (367 . 370) nil (366 . 368) ("(" . -366) (366 . 367) nil (359 . 366) nil (352 . 359) (" " . 352) 353 nil (352 . 353) nil (351 . 352) nil (349 . 351) ("(" . -349) (349 . 350) nil (342 . 349) nil (341 . 342) nil (340 . 341) nil (336 . 339) ("max" . 336) nil (333 . 339) nil (332 . 334) ("(" . -332) (332 . 333) nil (326 . 332) nil (324 . 326) ("	" . 324) 325 nil (323 . 325) nil (322 . 323) nil (311 . 322) nil (310 . 311) nil (308 . 310) nil (307 . 308) nil (301 . 307) nil (299 . 301) nil (298 . 299) nil (293 . 298) nil ("_" . -293) 294 nil (290 . 294) nil (289 . 290) nil (285 . 289) nil (284 . 285) nil (278 . 284) nil (276 . 278) nil (275 . 276) nil (268 . 275) nil (267 . 268) nil (265 . 267) nil (264 . 265) nil (258 . 264) nil (257 . 258) (256 . 258) nil (255 . 257) ("{" . -255) (255 . 256) nil (254 . 255) nil (248 . 254) nil ("D" . -248) 249 nil (241 . 249) (t 24271 4993 681832 470000) nil ("struct Eratos
{
	vector<ll> primes;
	vector<ll>vector<bool> isprime;vector<ll> min_factor;

	Eratos(ll MAX) : primes(),
					 isprime(MAX+1, true),
					 min_factor(MAX+1, -1)
	{
		isprime[0] = isprime[1] = false;
		min_factor[0] = 0;
		min_factor[1] = 1;

		for (ll i = 2; i <= MAX; ++i)
		{
			if(!isprime[i]) continue;
			primes.push_back(i);
			min_factor[i] = i;
			for (ll j = i*2; j <= MAX; j += i)
			{
				isprime[j] = false;
				if (min_factor[j] == -1) min_factor[j] = i;
			}
		}
	}

	vector<pair<ll, ll>> prime_factorize(ll n)
	{
		vector<pair<ll, ll>> res;
		while (n != 1)
		{
			ll prime = min_factor[n];
			ll exp = 0;
			while (min_factor[n] == prime)
			{
				++exp;
				n /= prime;
			}
			res.push_back(make_pair(prime, exp));
		}
		return res;
	}
};
" . -241) ((marker . 1) . -123) ((marker . 1003) . -45) ((marker . 1003) . -772) ((marker . 1) . -45) ((marker) . -772) ((marker . 1) . -516) ((marker . 1) . -772) 1013 nil undo-tree-canary))

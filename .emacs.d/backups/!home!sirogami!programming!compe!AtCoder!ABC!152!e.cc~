#include <bits/stdc++.h>
using namespace std;

using ll = long long;

constexpr ll MOD = 1e9+7;
constexpr ll INF = 1ll<<60;

#define FOR(i,a,b) for (ll i=(a);i<(ll)(b);++i)
#define REP(i,n) FOR(i,0,n)
#define ALL(v) (v).begin(),(v).end()

ll gcd(ll a, ll b)
{
	if (b == 0) return a;
	else return gcd(b, a%b);
}

ll lcm(ll a, ll b)
{
	return a*b/gcd(a, b);
}

vector<pair<ll, ll>> toDivisorP(ll num)
{
	vector<pair<ll, ll>> d;
	for (ll i = 1; i * i <= num; ++i)
	{
		if (i*i == num) d.push_back(pair<ll, ll>(i, i));
		else if (num % i == 0)
		{
			d.push_back(pair<ll, ll>(i, num/i));
		}
	}
	return d;
}

int main(int argc, char **argv)
{
	ll N; cin >> N;
	vector<ll> A(N); REP(i, N) cin >> A[i];

	ll tmp = A.front();
	for (ll i = 1; i < N; ++i)
	{
		(tmp = lcm(tmp, A[i])) %= MOD;
	}
	// std::cout << "lcm : "<< tmp <<  std::endl;
	
	ll res{0};
	REP(i, N)
	{
		(res += (tmp * modinv(A[i], MOD)) % MOD) %= MOD;
	}

	std::cout << res << std::endl;
}

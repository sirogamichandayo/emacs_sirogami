#include <bits/stdc++.h>
using namespace std;
using ll = long long;
using Graph = vector<vector<ll>>;

bool check(const Graph &G, const vector<int> &v)
{
	if (v[0] != 0) return false;

	ll current{v[0]};
	ll target{v[1]};
	while (true)
	{
		bool flag{false};
		for (auto e : G[current])
		{
			if (e == target) flag = true;
		}
		if (!flag) return false;
	}
	return true;
}

int main(int argc, char **argv)
{
	ll n, m;
	cin >> n >> m;
	Graph G(n);

	for (ll i = 0; i < m; ++i)
	{
		ll a, b; cin >> a >> b; --a, --b;
		G[a].push_back(b);
		G[b].push_back(a);
	}

	vector<ll> v;
	for (ll i = 0; i < m; ++i)
		v.push_back(i);

	ll count{0};
	do
	{
		
	} while (next_permutation(v.begin(), v.end()));
}

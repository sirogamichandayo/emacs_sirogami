#include <bits/stdc++.h>
using namespace std;

using ll = long long;
using P = pair<ll, ll>;

const ll MOD = 1e9+7;
// const ll MOD = 998244353;
const ll INF = 1ll<<60;

#define FOR(i,a,b) for (ll i=(a);i<(ll)(b);++i)
#define REP(i,n) FOR(i,0,n)
#define ALL(v) (v).begin(),(v).end()
#define DEBUG(x) ;
#define DEBUG(x) std::cerr << #x << " : " << (x) << std::endl;

int dx[4]{0, 1, 0, -1};
int dy[4]{1, 0, -1, 0};

template<class T>
bool chmin(T &a, T b)
{
	if (a > b)
	{
		a = b;
		return false;
	}
	return true;
}

template<class T>
bool chmax(T &a, T b)
{
	if (a < b)
	{
		a = b;
		return false;
	}
	return true;
}

template<class T>
bool chmax(T &a, initializer_list<T> l)
{
	return chmax(a, *max_element(l.begin(), l.end()));
}

template<class T>
bool chmin(T &a, initializer_list<T> l)
{
	return chmin(a, *min_element(l.begin(), l.end));
}


ll dp[3010][3010][4]{};
ll grid[3010][3010]{};

int main(int argc, char **argv)
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

	ll H, W, K;
	cin >> H >> W >> K;
	REP(i, K)
	{
		ll a, b, c; cin >> a >> b >> c;
		--a, --b;
		grid[a][b] = c;
	}

	if (grid[0][0] > 0)
		dp[0][0][1] = grid[0][0];
	for (ll hi = 0; hi < H + 5; ++hi)
	{
		for (ll wi = 0; wi < W + 5; ++wi)
		{
			for (ll k = 0; k < 4; ++k)
			{
				if (grid[hi][wi] > 0)
				{
					if (wi - 1 >= 0 && k - 1 >= 0)
						chmax(dp[hi][wi][k], dp[hi][wi-1][k-1] + grid[hi][wi]);

					if (hi - 1 >= 0)
						chmax(dp[hi][wi][1], dp[hi-1][wi][k] + grid[hi][wi]);
				}
				if (wi-1 >= 0) chmax(dp[hi][wi][k], dp[hi][wi-1][k]);
				if (hi-1 >= 0) chmax(dp[hi][wi][0], dp[hi-1][wi][k]);
			}
		}
	}

	ll res{-INF};
	REP(k, 4) chmax(res, dp[H-1][W-1][k]);

	std::cout << res << std::endl;
	return 0;
}

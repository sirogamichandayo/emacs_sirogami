#include <bits/stdc++.h>
using namespace std;
using ll = long long;
using Graph = vector<vector<ll>>;

Graph G;
ll dp[100010];
ll N, M;

ll solve(ll v)
{
	if (dp[v] != 1) return dp[v];

	ll res{0};
	for (auto &nv : G[v])
	{
		res = max(res, solve(nv)+1);
	}
	return dp[v] = res;
}

int main(int argc, char **argv)
{
	cin >> N >> M;
	G.assign(N, vector<ll>());

	for (ll i = 0; i < M; ++i)
	{
		ll a, b; cin >> a >> b; --a, --b;
		G[a].push_back(b);
	}

	for (ll i = 0; i < N; ++i) dp[i] = -1;

	ll res{0};
	for (ll v = 0; v < N; ++v) res = max(res, solve(v));
	std::cout << res << std::endl;
}

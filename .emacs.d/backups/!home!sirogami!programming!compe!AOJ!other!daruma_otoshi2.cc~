#include <bits/stdc++.h>
using namespace std;
using ll = long long;
constexpr ll MOD = 1000000007;
constexpr ll INF = 1ll<<60;

template<class T>
bool chmin(T &a, T b)
{
	if (a > b)
	{
		a = b;
		return false;
	}
	return true;
}

template<class T>
bool chmax(T &a, T b)
{
	if (a < b)
	{
		a = b;
		return false;
	}
	return true;
}

template<class T>
bool chmax(T &a, initializer_list<T> l)
{
	return chmax(a, *max_element(l.begin(), l.end()));
}

template<class T>
bool chmin(T &a, initializer_list<T> l)
{
	return chmin(a, *min_element(l.begin(), l.end));
}

ll N;
ll W[60];
ll dp[60][60];

void init()
{
	for (ll i = 0; i < 60; ++i) for (ll j = 0; j < 60; ++j) dp[i][j] = -1;
}

ll solve(ll l, ll r)
{
	if (dp[l][r]!=-1)return dp[l][r];
	if (l == r) return dp[l][r] = 0;

	ll res(0);
	if (abs(W[l]-W[r])<=1 && solve(l+1, r+1) == r-l-1)
		res = r - l + 1;
	
}

int main(int argc, char **argv)
{
	while (cin >> N, N)
	{
		
		for (ll i = 0; i < N; ++i) cin >> W[i];
		std::cout << solve(0, N-1) << std::endl;
	}
}

#include <bits/stdc++.h>
using namespace std;

using ll = long long;
using P = pair<ll, ll>;

const ll MOD = 1e9+7;
// const ll MOD = 998244353;
const ll INF = 1ll<<60;

#define FOR(i,a,b) for (ll i=(a);i<(ll)(b);++i)
#define REP(i,n) FOR(i,0,n)
#define ALL(v) (v).begin(),(v).end()

struct grid
{
	ll to, cost;
};

vector<vector<grid>> G;
ll N, M;

int main(int argc, char **argv)
{
	cin >> N >> M;
	G.resize(N);
	REP(i, M)
	{
		ll a, b, c; cin >> a >> b >> c;
		--a, --b;
		G[a].push_back(grid{b, c});
		G[b].push_back(grid{a, -c});
	}

	vector<ll> dist(N, INF);
	vector<bool> mark(N, false);
	queue<ll> que;
	REP(i, N)
	{
		if (mark[i]) continue;
		que.push(i);
		dist[i] = 0;
		while (!que.empty())
		{
			ll v = que.front(); que.pop();
			for (auto &p : G[v])
			{
				ll nv = p.to;
				ll c = p.cost;

				if (dist[nv] == INF)
					dist[nv] = dist[v] + c;
				if (dist[nv] != dist[v] + c)
				{
					std::cout << "No" << std::endl;
					return 0;
				}
				if (!mark[nv])
				{
					mark[nv] = true;
					que.push(nv);
				}
			}
		}
	}

	std::cout << "Yes" << std::endl;
}

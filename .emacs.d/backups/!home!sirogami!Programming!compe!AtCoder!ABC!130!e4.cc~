//////////////////////////////
// Check before you submit!!!
// #define _ATCODER_LIBRARY

const long long MOD = 1e9+7;
// const long long MOD = 998244353;
/////////////////////////////

#include <bits/stdc++.h>
#ifdef _ATCODER_LIBRARY
#include <atcoder/all>
using namespace atcoder;
#endif
using namespace std;

#define DEBUG(x);
#ifdef _DEBUG
#define DEBUG(x) std::cerr << #x << " : " << (x) << std::endl;
#define GLIBCXX_DEBUG
#define GLIBCXX_DEBUG_PEDANTIC
#endif

const long long INF = 1LL << 60;
using ll = long long;
using P = pair<ll, ll>;

#define FOR(i,a,b) for (ll i=(a);i<(ll)(b);++i)
#define REP(i,n) FOR(i,0,n)
#define ALL(v) (v).begin(),(v).end()

int dx[4]{0, 1, 0, -1};
int dy[4]{1, 0, -1, 0};

ll dp[2*1000+10][2*1000+10];
ll sum[2*1000+10][2*1000+10];

int main(int argc, char **argv)
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	ll N, M; cin >> N >> M;
	vector<ll> S(N), T(M);
	REP(i, N) cin >> S[i];
	REP(i, M) cin >> T[i];

	dp[0][0] = sum[1][1] = 1;

	REP(n, N+1)REP(m, M+1)
	{
		if (S[n-1] == T[n-1])
			dp[n][m] = sum[n][m];

		(sum[n+1][m+1] = sum[n][m+1] + sum[n+1][m] - sum[n][m] + dp[n][m] + MOD) %= MOD;
	}
	
	return 0;
}

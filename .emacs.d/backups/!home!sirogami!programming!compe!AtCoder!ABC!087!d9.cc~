#include <bits/stdc++.h>
using namespace std;

using ll = long long;
using P = pair<ll, ll>;

const ll MOD = 1e9+7;
// const ll MOD = 998244353;
const ll INF = 1ll<<60;

#define FOR(i,a,b) for (ll i=(a);i<(ll)(b);++i)
#define REP(i,n) FOR(i,0,n)
#define ALL(v) (v).begin(),(v).end()

struct UnionFind
{
	vector<ll> par, wei;
	UnionFind(ll n)
	{
		init(n);
	}

	void init(ll n)
	{
		par.assign(n, -1);
		wei.assign(n, 0);
	}

	ll root(ll x)
	{
		if (par[x] < 0) return x;
		else
		{
			ll r = root(par[x]);
			wei[x] += wei[par[x]];
			return par[x] = r;
		}
	}
	
	ll weight(ll x)
	{
		root(x);
		return wei[x];
	}

	ll merge(ll x, ll y, ll w)
	{
		w -= weight(x);
		w += weight(y);

		x = root(x);
		y = root(y);
		if (x == y) return false;

		if (rank(x) > rank(y)) swap(x, y), w *= -1;
		// rank(x) < rank(y)
		par[x] += par[y];
		par[y] = x;

		wei[y] = w;
		return true;
	}

	ll rank(ll x)
	{
		return -par[rank(x)];
	}
}

int main(int argc, char **argv)
{
}

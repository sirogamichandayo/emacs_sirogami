//////////////////////////////
// Check before you submit.
// #define _ATCODER_LIBRARY
     
const long long MOD = 1e9+7;
// const long long MOD = 998244353;
     
/////////////////////////////
#include <bits/stdc++.h>
using namespace std;
#include <boost/multiprecision/cpp_int.hpp>
using namespace boost::multiprecision;
     
#ifdef _ATCODER_LIBRARY
#include <atcoder/all>
using namespace atcoder;
#endif
// _ATCODER_LIBRARY
     
const long long INF = 1LL << 60;
const double PI = acos(-1);
using ll = long long;
using P = pair<ll, ll>;
     
     
#define FOR(i,a,b) for (ll i=(a);i<(ll)(b);++i)
#define REP(i,n) FOR(i,0,n)
#define ALL(v) (v).begin(),(v).end()
#define SUM(v) accumulate(ALL(v),0ll)
     
template<typename T>istream& operator>>(istream&i,vector<T>&v){REP(j,v.size())i>>v[j];return i;}
template<typename T>string join(vector<T>&v){stringstream s;REP(i,v.size())s<<' '<<v[i];return s.str().substr(1);}
template<typename T>ostream& operator<<(ostream&o,vector<T>&v){if(v.size())o<<join(v);return o;}
template<typename T>string join(vector<vector<T>>&vv){string s="\n";REP(i,vv.size())s+=join(vv[i])+"\n";return s;}
template<typename T>ostream& operator<<(ostream&o,vector<vector<T>>&vv){if(vv.size())o<<join(vv);return o;}
template<typename T1,typename T2>istream& operator>>(istream&i,pair<T1,T2>&v){return i>>v.first>>v.second;}
template<typename T1,typename T2>ostream& operator<<(ostream&o,pair<T1,T2>&v){return o<<v.first<<","<<v.second;}
     
#define DEBUG(x);
     
#ifdef _DEBUG
#define DEBUG(x) std::cerr << #x << " : " << (x) << std::endl;
#define GLIBCXX_DEBUG
#define GLIBCXX_DEBUG_PEDANTIC
#endif
// _DEBUG
     
int dx[4]{0, 1, 0, -1};
int dy[4]{1, 0, -1, 0};
     
void init_init_init() {ios_base::sync_with_stdio(false);cin.tie(NULL);std::cout<<fixed<<setprecision(10);}
template<class T>T up(T a, T b){assert(b);return (a+b-1)/b;}
template<typename... A>bool eq(A const&... a){auto t={a...};assert(t.size());auto tar=*t.begin();for(const auto&e:t)if(tar!=e)return false;return true;}
     
template<class T>bool chmin(T &a, T b){if(a>b){a=b;return false;}return true;}
template<class T>bool chmax(T &a, T b){if(a<b){a=b;return false;}return true;}
template<class T>bool chmax(T &a, initializer_list<T>l){return chmax(a,max(l));}
template<class T>bool chmin(T &a, initializer_list<T>l){return chmin(a,min(l));}
     
//////////////////////////////////////////////////////////////////
// My Library
//////////////////////////////////////////////////////////////////
     
     
     
//////////////////////////////////////////////////////////////////
// Contest Code
//////////////////////////////////////////////////////////////////
     
ll WW, HH;
vector<vector<ll>> grid;
     
void dfs(ll h, ll w)
{
	grid[h][w] = 1;
     
	REP(i, 4)
	{
		ll hh = h + dy[i];
		ll ww = w + dx[i];
		if (hh < 0 or hh >= HH or ww < 0 or ww >= WW) continue;
		if (grid[hh][ww]) continue;
		dfs(hh, ww);
	}
}
     
int main(int argc, char **argv)
{
	init_init_init();
     
	ll W, H; cin >> W >> H;
	ll N; cin >> N;
	vector<ll> X1(N), Y1(N), X2(N), Y2(N);
	vector<ll> xx, yy;
	REP(i, N)
	{
		cin >> X1[i] >> Y1[i] >> X2[i] >> Y2[i];
		xx.push_back(X1[i]);
		xx.push_back(X2[i]);
		yy.push_back(Y1[i]);
		yy.push_back(Y2[i]);
	}
	xx.push_back(0);
	xx.push_back(W);
	yy.push_back(0);
	yy.push_back(H);
	sort(ALL(xx));
	sort(ALL(yy));
	xx.erase(unique(ALL(xx)), xx.end());
	yy.erase(unique(ALL(yy)), yy.end());
     
	HH = yy.size()-1;
	WW = xx.size()-1;
	grid.assign(HH+1, vector<ll>(WW+1, 0ll));
	REP(i, N)
	{
		ll xi1 = lower_bound(ALL(xx), X1[i]) - xx.begin();
		ll xi2 = lower_bound(ALL(xx), X2[i]) - xx.begin();
		ll yi1 = lower_bound(ALL(yy), Y1[i]) - yy.begin();
		ll yi2 = lower_bound(ALL(yy), Y2[i]) - yy.begin();

		grid[yi2][xi2]++;
		grid[yi1][xi1]++;
		
		grid[yi1][xi2]--;
		grid[yi2][xi1]--;
	}
	REP(h, HH) REP(w, WW) grid[h][w+1] += grid[h][w];
	REP(w, WW) REP(h, HH) grid[h+1][w] += grid[h][w];
     
	DEBUG(grid);
     
	ll res{0};
	REP(h, HH)REP(w, WW)
	{
		if (grid[h][w]) continue;
		dfs(h, w);
		++res;
	}
     
	std::cout << res << std::endl;
}
